li x2 0 //x2=0
spli x2 100 1
spli x2 500 2
spli x2 0 3
spli x2 1 0
spli x2 1 7
addi x2 x2 1 //x2=1
spli x2 0 1
spli x2 100 2
spli x2 0 3
spli x2 1 0
spli x2 0 7
//main for loop
li x0 0
li x6 64 //x6 = max sprites
LOOP
li x1 0
FOR1 //loop through all sprites with x1
    lisp x1 x2 0 //x2 is type
    beq x2 x0 SKIP//skip if not valid
    lisp x1 x2 7//x2 = team
    li x3 0
    li x10 100000 //min distance
    li x11 0 //goalx
    li x12 0 //goaly
    FOR2 //loop with x3
        //determine if other sprite is valid and on other team and not equal to current sprite
        beq x3 x1 SKIPINNER
        li x4 0
        lisp x3 x5 0 //x5=state
        beq x5 x4 SKIPINNER
        lisp x3 x5 7//x5=team
        beq x5 x2 SKIPINNER
        dist x1 x3 x5 1 2 //x5 = distance between x1 and x3
        bge x5 x10 SKIPINNER
        addi x10 x5 0 //x10=x5 new smallest distance
        lisp x3 x11 1 //load new x
        lisp x3 x12 2 //load new y
        SKIPINNER
        addi x3 x3 1 //increment x3
    bne x3 x6 FOR2 //END FOR2
    li x13 100000
    beq x10 x13 SKIP //skip if found no one
    lisp x1 x13 1//load x into x13
    lisp x1 x14 2//load x into x14
    abs x15 x13 x11
    abs x16 x14 x12
    li x17 5
    blt x15 x16 IFVERT
    blt x11 x13 LEFT
    //go right
    spadd x1 x17  1 //change 5 pixels
    jmp SKIP
    LEFT
    //go left
    spsub x1 x17 1
    jmp SKIP

    IFVERT
    blt x12 x14 UP
    //go down
    spadd x1 x17 2 //change 5 pixels
    jmp SKIP
    UP
    //go up
    spsub x1 x17 2

    SKIP
    addi x1 x1 1 //increment x1
bne x1 x6 FOR1 //END FOR1
wait 20000000
jmp LOOP